name: CI

on: [push, pull_request]

env:
  NUMBA_NUM_THREADS: 1
  MPLBACKEND: Agg
  PYTEST_ADDOPTS: --color=yes

jobs:
  pyflakes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: pyflakes
        run: |
          pip install pyflakes
          pyflakes magicctapipe

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Build docs
        run: make doc

      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs/_build/html

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        ctapipe-version: [v0.12.0]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          CTAPIPE_VERSION: ${{ matrix.ctapipe-version }}

        run: |
          . $CONDA/etc/profile.d/conda.sh
          conda config --set always_yes yes --set changeps1 no
          sed -i -e "s/- python=.*/- python=$PYTHON_VERSION/g" environment.yml
          conda install mamba -n base -c conda-forge
          mamba env create -n ci -f environment.yml
          conda activate ci
          # we install ctapipe using pip to be able to select any commit, e.g. the current master
          pip install pytest-cov "git+https://github.com/cta-observatory/ctapipe@$CTAPIPE_VERSION"
          pip install pyflakes
          pip install -e .
          git describe --tags

      #- name: Download test data
      #  env:
      #    TEST_DATA_USER: ${{ secrets.test_data_user }}
      #    TEST_DATA_PASSWORD: ${{ secrets.test_data_password }}
      #  run: |
      #    chmod +x ./download_test_data.sh
      #    ./download_test_data.sh

      - name: Tests
        env:
          MAGIC_CTA_DATA_USER: ${{ secrets.magic_cta_data_user }}
          MAGIC_CTA_DATA_PASSWORD: ${{ secrets.magic_cta_data_password }}
        run: |
          # github actions starts a new shell for each "step", so we need to
          # activate our env again
          source $CONDA/etc/profile.d/conda.sh
          conda activate ci
          coverage run -m pytest -v
          coverage xml

      - uses: codecov/codecov-action@v3
